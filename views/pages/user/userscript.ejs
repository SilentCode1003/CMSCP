<script>
    $(document).ready(function () {
        LoadTable();
        let userId = "";
        let selectedAccess = null;
        let selectedAccessupd = null;
        LoadList();
        LoadListupd();

        $("#myInput").on("input", function () {
            filterTableRows("#datatable", 8, "#myInput");
        });

        $("#selectaccess").on("change", function () {
            selectedAccess = $(this).val();
        });

        $("#selectaccessupd").on("change", function () {
            selectedAccessupd = $(this).val();
        });
        function LoadList() {
            $.ajax({
                type: "GET",
                url: "/user/loadlist",
                success: function (result) {
                    var data = result.data;

                    $.each(data, function (key, item) {
                        var options = new Option(item.accessid, item.accessid);
                        $(options).html(item.accessname);
                        $("#selectaccess").append(options);
                    });
                    // console.log("Dropdown options loaded:", $("#selectaccess").html());
                },
                error: function (result) {
                    alert("error: " + result.data);
                },
            });
        }
        function LoadListupd() {
            $.ajax({
                type: "GET",
                url: "/user/loadlist",
                success: function (result) {
                    var data = result.data;

                    $.each(data, function (key, item) {
                        var options = new Option(item.accessid, item.accessid);
                        $(options).html(item.accessname);
                        $("#selectaccessupd").append(options);
                    });
                    // console.log("Dropdown options loaded:", $("#selectaccess").html());
                },
                error: function (result) {
                    alert("error: " + result.data);
                },
            });
        }
        $("#datatable").on('click', '.status-btn', function () {
            var userId = $(this).data('id');
            var currentStatus = $(this).data('new-status');
            var newStatus = currentStatus === "Active" ? "Inactive" : "Active";


            $(this).data('new-status', newStatus);
            var icon = newStatus === "Active" ? "fas fa-eye" : "far fa-eye-slash";
            $(this).find('i').removeClass().addClass(icon);


            var statusCell = $(this).closest('tr').find('td:eq(6) span');
            statusCell.text(newStatus);
            statusCell.removeClass("active-status inactive-status");
            if (newStatus === "Active") {
                statusCell.addClass("active-status");
            } else {
                statusCell.addClass("inactive-status");
            }

            updateUserStatus(userId, newStatus);
        });
        $("#datatable").on('click', 'tr', function () {
            var dataRow = [];
            $(this).closest('tr').find('td').each(function () {
                dataRow.push($(this).text());
            });
            //  console.log(dataRow)
             userId = dataRow[0];
            console.log("Pre! ito yung userId:", userId)

        });

        function LoadTable() {
            // console.log("Gumagana idok!!");

            $("#datatable").DataTable({
                destroy: true,
                processing: true,
                serverSide: true,
                paging: false,
                searching: false,
                info: false,
                scrollY: 400,
                scrollCollapse: true,
                serverMethod: "GET",
                ajax: {
                    url: "/user/load",
                    dataSrc: (json) => {
                        var finalData = [];
                        var data = json.data;
                        // console.log(data);
                        $.each(data, (key, item) => {
                            var statusClass = item.status === "Active" ? "active-status" : "inactive-status";
                            finalData.push({
                                id: item.ID,
                                fullname: item.fullname,
                                username: item.username,
                                password: item.password,
                                access: item.accessType,
                                createdby: item.createdBy,
                                createdDate: new Date(item.createdDate).toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' }).replace(/\//g, '-'),
                                status: `<span class="${statusClass}">${item.status}</span>`,
                                action: `
                                      <button class="edit-btn" data-id="${item.ID}" data-toggle="modal" data-target="#staticmodalupdate">
                                      <i class="fas fa-edit"></i>
                                      </button>

  
                                      <button class="delete-btn" data-id="${item.ID}">
                                      <i class="fas fa-trash-alt"></i> 
                                      </button>
                                      <button class="status-btn" data-id="${item.ID}" data-new-status="${item.status === 'Active' ? 'Inactive' : 'Active'}">
                                    <i class="${item.status === 'Active' ? 'fas fa-eye' : 'far fa-eye-slash'}"></i>
                                </button>

                            `,
                            });


                        });

                        return finalData;
                    },
                },
                columnDefs: [
                    {
                        targets: 1,
                        className: "td-indent",
                    },
                ],
                columns: [
                    { data: "id" },
                    { data: "fullname" },
                    { data: "username" },
                    //{ data: "password" },
                    { data: "access" },
                    { data: "createdby" },
                    { data: "createdDate" },
                    { data: "status" },
                    { data: "action" },
                ],
                initComplete: function () {
                    // console.log("init complete");
                    // hideload();
                },
            });
        }
        $("#save-button").on("click", function () {
            var fullname = $("#fullname").val();
            var username = $("#username").val();
            var password = $("#password").val();
            var selectaccess = $("#selectaccess").val();


            var status = "Active";
            var createdBy = "Admin";
            var createdDate = new Date().toISOString();


            var table = $('#datatable').DataTable();
            var names = table.column(1).data().toArray();
            var usernames = table.column(2).data().toArray();

            if (names.includes(fullname)) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Name already exists.',
                });
                return;
            }

            if (usernames.includes(username)) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Username already exists.',
                });
                return;
            }
            if (fullname === "") {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Fullname is empty!.',
                });
                return;
            }
            if (username === "") {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Username is empty!.',
                });
                return;
            }
            if (password === "") {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Password is empty!.',  
                });
                return;
            }
            if (selectedAccess === null) {
                return;
            }

            $.ajax({
                url: "/user/save",
                method: "POST",
                data: {
                    fullname: fullname,
                    username: username,
                    password: password,
                    selectaccess: selectaccess,
                    status: status,
                    createdBy: createdBy,
                    createdDate: createdDate
                },
                success: function (response) {
                    if (response && response.msg === "success") {
                        $("#fullname").val("");
                        $("#username").val("");
                        $("#password").val("");
                        // $("#accesstype").val("");
                        $("#selectaccess").val("");

                        $("#staticmodal").modal("hide");
                        $('#datatable').DataTable().ajax.reload();
                        Swal.fire({
                            position: "center",
                            icon: "success",
                            title: "Data Saved successfully!",
                            message: "Sample Message",
                            showConfirmButton: true,
                            timer: 1500
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Error saving data. Please try again.',
                        });
                    }
                }
            });
        });
        function updateUserStatus(userId, newStatus) {
            console.log("Updating user status:", userId, newStatus);
            $.ajax({
                url: `/user/editstatus/${userId}/status`,
                method: 'PUT',
                contentType: 'application/json',
                data: JSON.stringify({ NewStatus: newStatus }),
                success: function (response) {
                    console.log("Server response:", response);
                    if (response.message === "User status updated successfully") {
                        console.log("Status updated successfully");
                    } else {
                        console.error("Failed to update status");
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error updating status:", xhr.responseText);
                }
            });
        }

       
    $(".edit-btn").on("click", function () {
            var userId = $(this).data("id");
            console.log("User ID:", userId);
            $("#userId").val(userId);
        });
 
        $("#update-button").on("click", function () {
            if (!userId) {
            console.error("Hindi makuha yung userId!");
            Swal.fire("Error", "User ID is not set. Please select a user first.", "error");
            return;
        }
            // let userId = $("#userId").val(); 
            let fname = $("#fullnameupd").val();
            let username = $("#usernameupd").val();
            let password = $("#passwordupd").val();
            let selectaccess = $("#selectaccessupd").val();
            let message = "";

            if (fname === "") {
                message += "Empty Fullname";
            }
            if (selectaccess === null) {
                return;
            }
            // console.log(message)

            // console.log("Fullname: ", fname, "username:", username, "password:", password, "selectaccess:", selectaccessupd)

            Swal.fire({
                title: "Do you want to save the changes?",
                showCancelButton: true,
                confirmButtonText: "Save",
                icon: "info"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/user/edit",
                        method: "PUT",
                        data: {
                            userId: userId,
                            fullname: fname,
                            username: username,
                            password: password,
                            selectaccess: selectaccess,
                        },
                        success: function (response) {
                            if (response && response.msg === "success") {
                                $("#staticmodalupdate").modal("hide");
                                $('#datatable').DataTable().ajax.reload();
                                Swal.fire("Updated Successfully!", "", "success");
                            } else {
                                alert("Error updating data. Please try again.");
                            }
                        },
                        error: function () {
                            alert("Error updating data. Please try again.");
                        }
                    });
                } else if (result.isDenied) {
                    Swal.fire("Changes are not saved", "", "info");
                }
            });
        });
    

        function handleDeleteButtonClick() {
            $('#datatable').on('click', '.delete-btn', function () {
                var userId = $(this).data('id');

                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!"
                }).then((result) => {

                    if (result.isConfirmed) {

                        $.ajax({
                            url: '/user/delete/' + userId,
                            method: 'DELETE',
                            success: function (response) {
                                if (response && response.msg === 'success') {
                                    $('#datatable').DataTable().ajax.reload();
                                    Swal.fire("Deleted Successfully!", "", "success");
                                } else {
                                    alert('Error deleting user. Please try again.');
                                }
                            },
                            error: function (xhr, status, error) {
                                console.error('Error deleting user:', error);
                                alert('Error deleting user. Please try again.');
                            }
                        });
                    }
                });
            });
        }

        handleDeleteButtonClick();
         
    //     document.getElementById('logout').addEventListener('click', function(event) {
    //     event.preventDefault();
    //     Swal.fire({
    //         title: 'Are you sure?',
    //         text: "You will be logged out of the application!",
    //         icon: 'warning',
    //         showCancelButton: true,
    //         confirmButtonColor: '#3085d6',
    //         cancelButtonColor: '#d33',
    //         confirmButtonText: 'Yes, log me out!'
    //     }).then((result) => {
    //         if (result.isConfirmed) {
    //             window.location.href = 'http://localhost:5000';
    //         }
    //     });
    // });


        $(document).on("click", "#addbtn", function () {
            console.log("triggered")
            $("#staticmodal").modal("show");
        })

        $(document).on("click", "#buttonclose", function () {
            $("#staticmodal").modal("hide");
        });

        $(document).on("click", "#buttoncloseX", function () {
            $("#staticmodal").modal("hide");
        });
        $(document).on("click", "#buttonclose", function () {
            $("#staticmodalupdate").modal("hide");
        });


        $(document).on("click", "#buttoncloseX", function () {
            $("#staticmodalupdate").modal("hide");
        });
    })
    const togglePassword = document.querySelector('#togglePassword');
        const password = document.querySelector('#password');
      
      togglePassword.addEventListener('click', function (e) {
        
        const type = password.getAttribute('type') === 'password' ? 'text' : 'password';
        password.setAttribute('type', type);
      
        this.classList.toggle('fa-eye-slash');
      });
      const togglePasswordupd = document.querySelector('#togglePasswordupd');
        const passwordupd = document.querySelector('#passwordupd');
      
      togglePasswordupd.addEventListener('click', function (e) {
        
        const type = passwordupd.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordupd.setAttribute('type', type);

        this.classList.toggle('fa-eye-slash');
      });
</script>